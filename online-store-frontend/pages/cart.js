import { useCart } from '../context/CartContext';
import { useState, useRef } from 'react';
import { useRouter } from 'next/router';
import Image from 'next/image';

export default function CartPage() {
  const { cart, updateQuantity, removeFromCart, clearCart } = useCart();
  const router = useRouter();
  const [name, setName] = useState('');
  const [address, setAddress] = useState('');
  const [phone, setPhone] = useState('');
  const [error, setError] = useState('');
  const [qrCodeUrl, setQrCodeUrl] = useState('');
const [isChecked, setIsChecked] = useState(false);
const [showTerms, setShowTerms] = useState(false); // тЬЕ р╕кр╕│р╕лр╕гр╕▒р╕Ъ popup

  const [showModal, setShowModal] = useState(false);
  const [isProcessing, setIsProcessing] = useState(false);
  const intervalRef = useRef(null);

  const totalPrice = cart.reduce((sum, item) => sum + item.price * item.quantity, 0);

  const handleOrder = async () => {
    if (!name || !address || !phone) {
      setError('тЭМ р╕Бр╕гр╕╕р╕Ур╕▓р╕Бр╕гр╕нр╕Бр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Гр╕лр╣Йр╕Др╕гр╕Ъ');
      return;
    }

    setError('');
    if (intervalRef.current) {
      clearInterval(intervalRef.current);
      intervalRef.current = null;
    }
    setQrCodeUrl('');
    setShowModal(false);
    setIsProcessing(false);

    await generateQRCode();
  };

  const generateQRCode = async () => {
    const res = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/create`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ amount: totalPrice * 100 }),
    });

    const data = await res.json();
    const qrUrl = data?.source?.scannable_code?.image?.download_uri;
    const id = data?.id;

    if (!qrUrl || !id) {
      alert('тЭМ р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕кр╕гр╣Йр╕▓р╕З QR Code р╣Др╕Фр╣Й');
      return;
    }

    setQrCodeUrl(qrUrl);
    setShowModal(true);
    pollPaymentStatus(id);
  };

  const pollPaymentStatus = (id) => {
    let attempts = 0;
    let intervalTime = 10000;

    const poll = async () => {
      const res = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/status/${id}`);
      const data = await res.json();

      if (data.paid) {
        clearInterval(intervalRef.current);
        intervalRef.current = null;
        setShowModal(false);
        setIsProcessing(true); // тЬЕ р╣Бр╕кр╕Фр╕З "р╕Бр╕│р╕ер╕▒р╕Зр╕Чр╕│р╕гр╕▓р╕вр╕Бр╕▓р╕г..."

        const orderRes = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/order`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ name, address, phone, cart, totalPrice }),
        });

        if (orderRes.ok) {
          alert('тЬЕ р╕Кр╕│р╕гр╕░р╣Ар╕Зр╕┤р╕Щр╣Бр╕ер╕░р╕кр╣Ир╕Зр╕нр╕╡р╣Ар╕бр╕ер╕кр╕│р╣Ар╕гр╣Зр╕И!');
          clearCart();
          setName('');
          setAddress('');
          setPhone('');
          setQrCodeUrl('');
          setIsProcessing(false);
          router.push('https://organeh.com');
        } else {
          alert('тЪая╕П р╕Кр╕│р╕гр╕░р╕кр╕│р╣Ар╕гр╣Зр╕И р╣Бр╕Хр╣Ир╕кр╣Ир╕Зр╕нр╕╡р╣Ар╕бр╕ер╣Др╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕И');
          setIsProcessing(false);
        }
      } else {
        attempts++;
        if (attempts === 3) {
          clearInterval(intervalRef.current);
          intervalTime = 30000;
          intervalRef.current = setInterval(poll, intervalTime);
        }
      }
    };

    intervalRef.current = setInterval(poll, intervalTime);

    // auto-stop after 5 mins
    setTimeout(() => {
      if (intervalRef.current) clearInterval(intervalRef.current);
    }, 5 * 60 * 1000);
  };

  return (
    <div className="p-10 max-w-lg mx-auto bg-gray-100 rounded-lg shadow-lg relative">

      {isProcessing && (
        <div className="absolute inset-0 bg-white bg-opacity-80 flex flex-col items-center justify-center z-50">
          <div className="text-xl text-blue-600 font-bold">тП│ р╕Бр╕│р╕ер╕▒р╕Зр╕Чр╕│р╕гр╕▓р╕вр╕Бр╕▓р╕г р╕Бр╕гр╕╕р╕Ур╕▓р╕гр╕нр╕кр╕▒р╕Бр╕Др╕гр╕╣р╣И...</div>
        </div>
      )}

      <button className="mb-5 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-700 flex items-center" onClick={() => router.back()}>
        тмЕя╕П р╕вр╣Йр╕нр╕Щр╕Бр╕ер╕▒р╕Ъ
      </button>

      <h2 className="text-3xl font-bold mb-5 text-center">ЁЯЫТ р╕Хр╕░р╕Бр╕гр╣Йр╕▓р╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕Вр╕нр╕Зр╕Др╕╕р╕У</h2>

      {cart.length === 0 ? (
        <p className="text-red-500 text-lg text-center">тЭМ р╕Хр╕░р╕Бр╕гр╣Йр╕▓р╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕зр╣Ир╕▓р╕З</p>
      ) : (
        <div className="space-y-4">
          {cart.map((item) => (
            <div key={item.id} className="border rounded-lg shadow p-4 flex items-center gap-4 bg-white">
              <Image
                src={item.image.startsWith('https') ? item.image : `https://organeh.com/shop${item.image}`}
                alt={item.name}
                width={96} // тЬЕ р╕Др╕зр╕▓р╕бр╕Бр╕зр╣Йр╕▓р╕З (px)
                height={96} // тЬЕ р╕Др╕зр╕▓р╕бр╕кр╕╣р╕З (px)
                className="object-cover rounded"
              />
              <div className="flex-grow">
                <h2 className="text-lg font-semibold">{item.name}</h2>
                <p className="text-lg font-bold text-blue-500">{item.price}р╕┐</p>
                <div className="flex items-center gap-2 mt-2">
                  <button className="bg-gray-300 px-3 py-1 rounded text-lg" onClick={() => updateQuantity(item.id, item.quantity - 1)}>тЮЦ</button>
                  <span className="text-lg">{item.quantity}</span>
                  <button className="bg-gray-300 px-3 py-1 rounded text-lg" onClick={() => updateQuantity(item.id, item.quantity + 1)}>тЮХ</button>
                </div>
              </div>
              <button className="bg-red-500 text-white px-3 py-2 rounded hover:bg-red-700 flex items-center" onClick={() => removeFromCart(item.id)}>
                ЁЯЧС р╕ер╕Ъ
              </button>
            </div>
          ))}
        </div>
      )}

      {cart.length > 0 && (
        <h2 className="text-2xl font-bold text-green-500 mt-5 text-center">ЁЯТ░ р╕гр╕▓р╕Др╕▓р╕гр╕зр╕бр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф: {totalPrice}р╕┐</h2>
      )}

      <div className="mt-5 bg-white p-5 rounded-lg shadow-lg">
        <label className="block text-lg font-bold">ЁЯСд р╕Кр╕╖р╣Ир╕н :</label>
        <input type="text" value={name} onChange={(e) => setName(e.target.value)} className="w-full border p-2 rounded mt-1" />

        <label className="block text-lg font-bold mt-3">ЁЯУН р╕Чр╕╡р╣Ир╕нр╕вр╕╣р╣И :</label>
        <textarea value={address} onChange={(e) => setAddress(e.target.value)} className="w-full border p-2 rounded mt-1" rows="3" />

        <label className="block text-lg font-bold mt-3">ЁЯУЮ р╣Ар╕Ър╕нр╕гр╣Мр╣Вр╕Чр╕г :</label>
        <input type="tel" value={phone} onChange={(e) => setPhone(e.target.value)} className="w-full border p-2 rounded mt-1" />

        {error && <p className="text-red-500 mt-3">{error}</p>}

<div className="mt-4">
  <label className="flex items-center space-x-2">
    <input
      type="checkbox"
      checked={isChecked}
      onChange={(e) => setIsChecked(e.target.checked)}
      className="w-5 h-5"
    />
    <span className="text-sm text-gray-700">
      р╕Йр╕▒р╕Щр╕вр╕нр╕бр╕гр╕▒р╕Ъ{' '}
      <button
        type="button"
        className="text-blue-500 underline"
        onClick={() => setShowTerms(true)}
      >
        р╣Ар╕Зр╕╖р╣Ир╕нр╕Щр╣Др╕Вр╣Бр╕ер╕░р╕Щр╣Вр╕вр╕Ър╕▓р╕вр╕Бр╕▓р╕гр╕Кр╕│р╕гр╕░р╣Ар╕Зр╕┤р╕Щ
      </button>
    </span>
  </label>
</div>
     <button
       className={`mt-4 text-white px-6 py-2 rounded w-full text-lg ${
         isChecked ? 'bg-blue-500 hover:bg-blue-700' : 'bg-gray-400 cursor-not-allowed'
       }`}
       onClick={handleOrder}
       disabled={cart.length === 0 || !isChecked}
     >
       ЁЯЫН р╕кр╕▒р╣Ир╕Зр╕Лр╕╖р╣Йр╕нр╕кр╕┤р╕Щр╕Др╣Йр╕▓
     </button>
      </div>





{showTerms && (
  <div className="fixed inset-0 bg-black bg-opacity-60 flex justify-center items-center z-50">
    <div className="bg-white p-6 rounded-lg shadow-lg max-w-xl max-h-[80vh] overflow-y-auto">


    <div className="max-w-3xl mx-auto p-6 bg-white rounded-lg shadow-lg my-10">
          <h1 className="text-3xl font-bold mb-4 text-center">ЁЯУЭ р╕Щр╣Вр╕вр╕Ър╕▓р╕вр╕Бр╕▓р╕гр╕Кр╕│р╕гр╕░р╣Ар╕Зр╕┤р╕Щр╣Бр╕ер╕░р╕Бр╕▓р╕гр╕кр╕▒р╣Ир╕Зр╕Лр╕╖р╣Йр╕н</h1>

          <section className="mb-6">
            <h2 className="text-xl font-semibold mb-2">ЁЯУМ 1. р╣Ар╕Зр╕╖р╣Ир╕нр╕Щр╣Др╕Вр╕Бр╕▓р╕гр╕кр╕▒р╣Ир╕Зр╕Лр╕╖р╣Йр╕н</h2>
            <p className="text-gray-700">
              р╕ер╕╣р╕Бр╕Др╣Йр╕▓р╕Ир╕░р╕Хр╣Йр╕нр╕Зр╕Бр╕гр╕нр╕Бр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Гр╕лр╣Йр╕Др╕гр╕Ър╕Цр╣Йр╕зр╕Щр╣Бр╕ер╕░р╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕Зр╕Бр╣Ир╕нр╕Щр╕Чр╕│р╕Бр╕▓р╕гр╕кр╕▒р╣Ир╕Зр╕Лр╕╖р╣Йр╕нр╕кр╕┤р╕Щр╕Др╣Йр╕▓ р╕лр╕▓р╕Бр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Др╕бр╣Ир╕Др╕гр╕Ър╕Цр╣Йр╕зр╕Щ р╕нр╕▓р╕Ир╕Чр╕│р╣Гр╕лр╣Йр╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕Ир╕▒р╕Фр╕кр╣Ир╕Зр╕кр╕┤р╕Щр╕Др╣Йр╕▓р╣Др╕Фр╣Йр╕нр╕вр╣Ир╕▓р╕Зр╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З
            </p>
          </section>

          <section className="mb-6">
            <h2 className="text-xl font-semibold mb-2">ЁЯТ│ 2. р╕зр╕┤р╕Шр╕╡р╕Бр╕▓р╕гр╕Кр╕│р╕гр╕░р╣Ар╕Зр╕┤р╕Щ</h2>
            <p className="text-gray-700">
              р╕гр╕░р╕Ър╕Ър╕Ир╕░р╕кр╕гр╣Йр╕▓р╕З QR Code р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Кр╕│р╕гр╕░р╣Ар╕Зр╕┤р╕Щр╕Ьр╣Ир╕▓р╕Щ Omise (р╕Юр╕гр╣Йр╕нр╕бр╣Ар╕Юр╕вр╣М) р╕Лр╕╢р╣Ир╕Зр╕ер╕╣р╕Бр╕Др╣Йр╕▓р╕Хр╣Йр╕нр╕Зр╕Чр╕│р╕гр╕▓р╕вр╕Бр╕▓р╕гр╕ар╕▓р╕вр╣Гр╕Щ 5 р╕Щр╕▓р╕Чр╕╡р╕лр╕ер╕▒р╕Зр╕Ир╕▓р╕Бр╣Др╕Фр╣Йр╕гр╕▒р╕Ъ QR Code р╕лр╕▓р╕Бр╣Др╕бр╣Ир╕Кр╕│р╕гр╕░р╕ар╕▓р╕вр╣Гр╕Щр╣Ар╕зр╕ер╕▓р╕Чр╕╡р╣Ир╕Бр╕│р╕лр╕Щр╕Ф р╕Ир╕░р╕Хр╣Йр╕нр╕Зр╕кр╕▒р╣Ир╕Зр╕Лр╕╖р╣Йр╕нр╣Гр╕лр╕бр╣Ир╕нр╕╡р╕Бр╕Др╕гр╕▒р╣Йр╕З
            </p>
          </section>

          <section className="mb-6">
            <h2 className="text-xl font-semibold mb-2">ЁЯУд 3. р╕Бр╕▓р╕гр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Др╕│р╕кр╕▒р╣Ир╕Зр╕Лр╕╖р╣Йр╕н</h2>
            <p className="text-gray-700">
              р╕лр╕ер╕▒р╕Зр╕Ир╕▓р╕Бр╕Кр╕│р╕гр╕░р╣Ар╕Зр╕┤р╕Щр╕кр╕│р╣Ар╕гр╣Зр╕И р╕гр╕░р╕Ър╕Ър╕Ир╕░р╕Чр╕│р╕Бр╕▓р╕гр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Др╕│р╕кр╕▒р╣Ир╕Зр╕Лр╕╖р╣Йр╕нр╣Вр╕Фр╕вр╕нр╕▒р╕Хр╣Вр╕Щр╕бр╕▒р╕Хр╕┤ р╣Бр╕ер╕░р╕Ир╕░р╕бр╕╡р╕нр╕╡р╣Ар╕бр╕ер╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Цр╕╣р╕Бр╕кр╣Ир╕Зр╣Др╕Ыр╕вр╕▒р╕Зр╕нр╕╡р╣Ар╕бр╕ер╕Вр╕нр╕Зр╕Ьр╕╣р╣Йр╕Вр╕▓р╕в
            </p>
          </section>

          <section className="mb-6">
            <h2 className="text-xl font-semibold mb-2">ЁЯФБ 4. р╕Щр╣Вр╕вр╕Ър╕▓р╕вр╕Бр╕▓р╕гр╕Др╕╖р╕Щр╣Ар╕Зр╕┤р╕Щ</h2>
            <p className="text-gray-700">
              р╕Бр╕▓р╕гр╕Др╕╖р╕Щр╣Ар╕Зр╕┤р╕Щр╕Ир╕░р╕Юр╕┤р╕Ир╕▓р╕гр╕Ур╕▓р╣Ар╕Ыр╣Зр╕Щр╕Бр╕гр╕Ур╕╡р╣Др╕Ы р╣Вр╕Фр╕вр╣Ар╕Йр╕Юр╕▓р╕░р╕Бр╕гр╕Ур╕╡р╕Чр╕╡р╣Ир╕кр╕┤р╕Щр╕Др╣Йр╕▓р╣Др╕бр╣Ир╕Хр╕гр╕Зр╕Хр╕▓р╕бр╕Др╕│р╕нр╕Шр╕┤р╕Ър╕▓р╕в р╕лр╕гр╕╖р╕нр╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╕Ир╕▓р╕Бр╕Чр╕▓р╕Зр╕гр╣Йр╕▓р╕Щ р╕Бр╕гр╕╕р╕Ур╕▓р╕Хр╕┤р╕Фр╕Хр╣Ир╕нр╕ар╕▓р╕вр╣Гр╕Щ 3 р╕зр╕▒р╕Щр╕лр╕ер╕▒р╕Зр╣Др╕Фр╣Йр╕гр╕▒р╕Ър╕кр╕┤р╕Щр╕Др╣Йр╕▓
            </p>
          </section>

<section className="mb-6">
  <h2 className="text-xl font-semibold mb-2">ЁЯУж 5. р╕Щр╣Вр╕вр╕Ър╕▓р╕вр╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕Зр╕кр╕┤р╕Щр╕Др╣Йр╕▓</h2>
  <p className="text-gray-700">
    р╕лр╕ер╕▒р╕Зр╕Ир╕▓р╕Бр╣Др╕Фр╣Йр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Др╕│р╕кр╕▒р╣Ир╕Зр╕Лр╕╖р╣Йр╕н р╕гр╕░р╕Ър╕Ър╕Ир╕░р╕Фр╕│р╣Ар╕Щр╕┤р╕Щр╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╣Ар╕Хр╕гр╕╡р╕вр╕бр╕кр╕┤р╕Щр╕Др╣Йр╕▓р╣Бр╕ер╕░р╕Ир╕▒р╕Фр╕кр╣Ир╕Зр╕ар╕▓р╕вр╣Гр╕Щ 1-3 р╕зр╕▒р╕Щр╕Чр╕│р╕Бр╕▓р╕г (р╣Др╕бр╣Ир╕гр╕зр╕бр╕зр╕▒р╕Щр╕лр╕вр╕╕р╕Фр╕гр╕▓р╕Кр╕Бр╕▓р╕г) р╣Вр╕Фр╕вр╕Ир╕░р╣Гр╕Кр╣Йр╕Ър╕гр╕┤р╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕Зр╕Вр╕нр╕Зр╕Ър╕гр╕┤р╕йр╕▒р╕Чр╕Вр╕Щр╕кр╣Ир╕Зр╕Чр╕╡р╣Ир╣Ар╕Кр╕╖р╣Ир╕нр╕Цр╕╖р╕нр╣Др╕Фр╣Й р╣Ар╕Кр╣Ир╕Щ Kerry, Flash р╕лр╕гр╕╖р╕нр╣Др╕Ыр╕гр╕йр╕Ур╕╡р╕вр╣Мр╣Др╕Чр╕в
  </p>
  <p className="text-gray-700 mt-2">
    р╕гр╕░р╕вр╕░р╣Ар╕зр╕ер╕▓р╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕Зр╣Вр╕Фр╕вр╕Ыр╕гр╕░р╕бр╕▓р╕У:
    <ul className="list-disc list-inside text-gray-700 mt-1">
      <li>р╕Бр╕гр╕╕р╕Зр╣Ар╕Чр╕Юр╕п р╣Бр╕ер╕░р╕Ыр╕гр╕┤р╕бр╕Ур╕Ср╕е: 1-3 р╕зр╕▒р╕Щр╕Чр╕│р╕Бр╕▓р╕г</li>
      <li>р╕Хр╣Ир╕▓р╕Зр╕Ир╕▒р╕Зр╕лр╕зр╕▒р╕Ф: 2-5 р╕зр╕▒р╕Щр╕Чр╕│р╕Бр╕▓р╕г</li>
    </ul>
  </p>
  <p className="text-gray-700 mt-2">
    р╕лр╕▓р╕Бр╕ер╕╣р╕Бр╕Др╣Йр╕▓р╣Др╕бр╣Ир╣Др╕Фр╣Йр╕гр╕▒р╕Ър╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕ар╕▓р╕вр╣Гр╕Щр╕гр╕░р╕вр╕░р╣Ар╕зр╕ер╕▓р╕Чр╕╡р╣Ир╕Бр╕│р╕лр╕Щр╕Ф р╕лр╕гр╕╖р╕нр╣Др╕Фр╣Йр╕гр╕▒р╕Ър╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕ер╣Ир╕▓р╕Кр╣Йр╕▓ р╕Бр╕гр╕╕р╕Ур╕▓р╣Бр╕Ир╣Йр╕Зр╕Чр╕╡р╕бр╕Зр╕▓р╕Щр╕Ьр╣Ир╕▓р╕Щр╕Кр╣Ир╕нр╕Зр╕Чр╕▓р╕Зр╕Бр╕▓р╕гр╕Хр╕┤р╕Фр╕Хр╣Ир╕нр╣Ар╕Юр╕╖р╣Ир╕нр╕Фр╕│р╣Ар╕Щр╕┤р╕Щр╕Бр╕▓р╕гр╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╣Бр╕ер╕░р╕Хр╕┤р╕Фр╕Хр╕▓р╕бр╕кр╕Цр╕▓р╕Щр╕░р╕Юр╕▒р╕кр╕Фр╕╕р╣Гр╕лр╣Йр╕Чр╕▒р╕Щр╕Чр╕╡
  </p>
</section>

          <section className="mb-6">
            <h2 className="text-xl font-semibold mb-2">ЁЯУЮ 6. р╕Хр╕┤р╕Фр╕Хр╣Ир╕нр╕кр╕нр╕Ър╕Цр╕▓р╕б</h2>
            <p className="text-gray-700">
              р╕лр╕▓р╕Бр╕бр╕╡р╕Вр╣Йр╕нр╕кр╕Зр╕кр╕▒р╕вр╕лр╕гр╕╖р╕нр╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕кр╕нр╕Ър╕Цр╕▓р╕бр╣Ар╕Бр╕╡р╣Ир╕вр╕зр╕Бр╕▒р╕Ър╕Др╕│р╕кр╕▒р╣Ир╕Зр╕Лр╕╖р╣Йр╕н р╕Бр╕гр╕╕р╕Ур╕▓р╕Хр╕┤р╕Фр╕Хр╣Ир╕нр╕Чр╕╡р╕бр╕Зр╕▓р╕Щр╕Ьр╣Ир╕▓р╕Щр╕Чр╕▓р╕Зр╕нр╕╡р╣Ар╕бр╕е <span className="text-blue-600">ilamoonshopping@gmail.com</span> р╕лр╕гр╕╖р╕нр╕Чр╕▓р╕З Facebook Page р╕Вр╕нр╕Зр╣Ар╕гр╕▓
            </p>
          </section>

          <p className="text-center text-gray-500 mt-10 text-sm">р╕Ыр╕гр╕▒р╕Ър╕Ыр╕гр╕╕р╕Зр╕ер╣Ир╕▓р╕кр╕╕р╕Ф: 7 р╕бр╕┤р╕Цр╕╕р╕Щр╕▓р╕вр╕Щ 2025</p>
        </div>

      <button
        onClick={() => setShowTerms(false)}
        className="mt-6 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-700 block mx-auto"
      >
        р╕Ыр╕┤р╕Ф
      </button>
    </div>
  </div>
)}



      {showModal && (
        <div className="fixed inset-0 bg-black bg-opacity-60 flex justify-center items-center z-50">
          <div className="bg-white p-6 rounded-lg shadow-lg text-center max-w-sm">
            <h2 className="text-xl font-bold mb-4">ЁЯУ▓ р╕кр╣Бр╕Бр╕Щр╣Ар╕Юр╕╖р╣Ир╕нр╕Кр╕│р╕гр╕░р╣Ар╕Зр╕┤р╕Щ</h2>
            <img src={qrCodeUrl} alt="PromptPay QR Code" className="mx-auto mb-4 w-60" />
            <p className="text-blue-500">тП│ р╕Бр╕гр╕╕р╕Ур╕▓р╕Кр╕│р╕гр╕░р╣Ар╕Зр╕┤р╕Щр╕ар╕▓р╕вр╣Гр╕Щр╕гр╕░р╕вр╕░р╣Ар╕зр╕ер╕▓ 5 р╕Щр╕▓р╕Чр╕╡</p>
            <button
              onClick={() => setShowModal(false)}
              className="mt-4 px-4 py-2 bg-red-500 text-white rounded hover:bg-red-700"
            >
              тЭМ р╕Ыр╕┤р╕Ф
            </button>
          </div>
        </div>
      )}
    </div>
  );
}
